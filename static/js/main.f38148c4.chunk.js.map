{"version":3,"sources":["reportWebVitals.js","global-style.js","components/Cards.js","components/Release.js","UserStoryMap.js","index.js","themes.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","CardContainer","styled","div","CardOutline","article","AddCardButton","button","attrs","_props","type","AddCardAboveButton","AddCardBelowButton","AddCardLeftButton","AddCardRightButton","Card","title","onAddAbove","onAddBelow","onAddLeft","onAddRight","defaultValue","autoFocus","onClick","Activity","props","Task","Story","IncrementWrapper","section","Release","name","children","DesignSurface","theme","background","ColumnList","Column","columnWidth","ActivityList","TaskList","generateId","Math","random","toString","substr","initialState","releases","id","activities","reducer","draft","action","splice","activityIndex","tasks","taskIndex","stories","storyIndex","releaseId","index","Error","addActivityAtIndex","dispatch","addTaskAtIndex","addReleaseAtIndex","UserStoryMap","useImmerReducer","map","activity","task","length","release","storiesInRelease","filter","x","newStoryHandler","addStoryAtIndex","story","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f38148c4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    font-size: 18px;\n    line-height: 1.5;\n    display: flex;\n  }\n\n  body {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n`\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: min-content auto min-content;\n  grid-template-rows: min-content auto min-content;\n  gap: 0em;\n  grid-template-areas:\n    \"top top top\"\n    \"left card right\"\n    \"bottom bottom bottom\";\n`;\n\nconst CardOutline = styled.article`\n  border: 1px solid #cccccc;\n  width: 100%;\n  grid-area: card;\n`;\n\nconst AddCardButton = styled.button.attrs(_props =>({\n  type: 'button'\n}))``;\n\nconst AddCardAboveButton = styled(AddCardButton)`\n  grid-area: top;\n`;\n\nconst AddCardBelowButton = styled(AddCardButton)`\n  grid-area: bottom;\n`;\n\nconst AddCardLeftButton = styled(AddCardButton)`\n  grid-area: left;\n`;\n\nconst AddCardRightButton = styled(AddCardButton)`\n  grid-area: right;\n`;\n\nfunction Card({title, onAddAbove, onAddBelow, onAddLeft, onAddRight}) {\n  return (\n    <CardContainer>\n      <CardOutline>\n        <input type=\"text\" defaultValue={title} autoFocus />\n      </CardOutline>\n\n      {onAddBelow && <AddCardBelowButton onClick={onAddBelow}>+</AddCardBelowButton>}\n      {onAddRight && <AddCardRightButton onClick={onAddRight}>+</AddCardRightButton>}\n      {onAddAbove && <AddCardAboveButton onClick={onAddAbove}>+</AddCardAboveButton>}\n      {onAddLeft && <AddCardLeftButton onClick={onAddLeft}>+</AddCardLeftButton>}\n    </CardContainer>\n  );\n}\n\nexport function Activity({onAddLeft, onAddRight, ...props}) {\n  return (\n    <Card {...props}\n          onAddLeft={onAddLeft}\n          onAddRight={onAddRight}\n          onAddAbove={null}\n          onAddBelow={null}>\n    </Card>\n  )\n}\n\nexport function Task({onAddLeft, onAddRight, ...props}) {\n  return (\n    <Card {...props}\n          onAddLeft={onAddLeft}\n          onAddRight={onAddRight}\n          onAddAbove={null}\n          onAddBelow={null}>\n    </Card>\n  )\n}\n\nexport function Story({onAddAbove, onAddBelow, ...props}) {\n  return (\n    <Card {...props}\n          onAddLeft={null}\n          onAddRight={null}\n          onAddAbove={onAddAbove}\n          onAddBelow={onAddBelow}>\n    </Card>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst IncrementWrapper = styled.section`\n  border-top: 1px solid #cccccc;\n`;\n\nexport default function Release({name, children, onAddAbove, onAddBelow}) {\n  return (\n    <IncrementWrapper>\n      <header>\n        <input type=\"text\" defaultValue={name} autoFocus />\n        <button type=\"button\" onClick={onAddAbove}>Add Release Above</button>\n        <button type=\"button\" onClick={onAddBelow}>Add Release Below</button>\n      </header>\n      <div>\n        {children}\n      </div>\n    </IncrementWrapper>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {useImmerReducer} from 'use-immer';\nimport {Activity, Task, Story} from 'components/Cards';\nimport Release from 'components/Release';\n\nconst DesignSurface = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100vh;\n  min-width: 100vw;\n  background: ${props => props.theme.background};\n`;\n\nexport const ColumnList = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: ${props => props.theme.columnWidth};\n  max-width: ${props => props.theme.columnWidth};\n`;\n\n\nconst ActivityList = styled.div`\n  display: flex;\n`;\n\nconst TaskList = styled.div`\n  display: flex;\n`;\n\nfunction generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nconst initialState = {\n  releases: [\n    {\n      id: generateId(),\n      name: 'Backlog'\n    }\n  ],\n  activities: []\n}\n\nfunction reducer(draft, action) {\n  switch (action.type) {\n    case 'add-activity':\n      draft.activities.splice(action.activityIndex, 0, {\n        id: generateId(),\n        title: '',\n        tasks:  []\n      })\n      break;\n\n    case 'add-task':\n      const tasks = draft.activities[action.activityIndex].tasks;\n      tasks.splice(action.taskIndex, 0, {\n        id: generateId(),\n        title: '',\n        stories:  []\n      })\n      break;\n\n    case 'add-story':\n      const stories = draft.activities[action.activityIndex].tasks[action.taskIndex].stories;\n      stories.splice(action.storyIndex, 0, {\n        id: generateId(),\n        releaseId: action.releaseId,\n        title: ''\n      })\n      break;\n\n    case 'add-release':\n      draft.releases.splice(action.index, 0, {\n        id: generateId(),\n        name: ''\n      })\n      break;\n\n    default:\n      throw new Error('Unknown action type')\n  }\n}\n\nfunction addActivityAtIndex(dispatch, activityIndex) {\n  if (activityIndex < 0) {\n    activityIndex = 0\n  }\n\n  dispatch({type: 'add-activity', activityIndex})\n}\n\nfunction addTaskAtIndex(dispatch, activityIndex, taskIndex) {\n  if (taskIndex < 0) {\n    taskIndex = 0\n  }\n\n  dispatch({type: 'add-task', activityIndex, taskIndex})\n}\n\nfunction addStoryAtIndex(dispatch, release, activityIndex, taskIndex, storyIndex) {\n  return (storyIndex) => {\n    if (storyIndex < 0) {\n      storyIndex = 0\n    }\n\n    dispatch({type: 'add-story', releaseId: release.id, activityIndex, taskIndex, storyIndex})\n  }\n}\n\nfunction addReleaseAtIndex(dispatch, index) {\n  if (index < 0) {\n    index = 0;\n  }\n\n  dispatch({type: 'add-release', index})\n}\n\nfunction UserStoryMap() {\n  const [{releases, activities}, dispatch] = useImmerReducer(reducer, initialState);\n\n  return (\n    <DesignSurface>\n      <ActivityList>\n        {activities.map((activity, activityIndex) => (\n          <div key={`activity-${activity.id}`}>\n            <Column>\n              <Activity title={activity.title}\n                        onAddLeft={() => addActivityAtIndex(dispatch, activityIndex)}\n                        onAddRight={() => addActivityAtIndex(dispatch, activityIndex + 1)} />\n            </Column>\n\n            <TaskList>\n              {activity.tasks.map((task, taskIndex) => (\n                <Column key={`task-${task.id}`}>\n                  <Task title={task.title}\n                        onAddLeft={() => addTaskAtIndex(dispatch, activityIndex, taskIndex)}\n                        onAddRight={() => addTaskAtIndex(dispatch, activityIndex, taskIndex + 1)} />\n                </Column>\n              ))}\n\n              {!activity.tasks.length &&\n                <button type=\"button\"\n                  onClick={() => addTaskAtIndex(dispatch, activityIndex, 0)}>\n                  + New Task\n                </button>}\n            </TaskList>\n          </div>\n        ))}\n\n        {!activities.length &&\n          <button type=\"button\"\n            onClick={() => addActivityAtIndex(dispatch, 0)}>\n            + New Activity\n          </button>}\n      </ActivityList>\n\n      {releases.map((release, index) => (\n        <Release key={`release-${release.id}`}\n                   {...release}\n                   index={index}\n                   onAddAbove={() => addReleaseAtIndex(dispatch, index)}\n                   onAddBelow={() => addReleaseAtIndex(dispatch, index + 1)}>\n          <ColumnList>\n            {activities.map((activity, activityIndex) => {\n              if (!activity.tasks.length) {\n                return <Column key={`activity-empty-tasks-${activity.id}`}></Column>\n              }\n\n              return (\n                activity.tasks.length && activity.tasks.map((task, taskIndex) => {\n                  const storiesInRelease = task.stories.filter(x => x.releaseId === release.id);\n                  const newStoryHandler = addStoryAtIndex(dispatch, release, activityIndex, taskIndex);\n\n                  return (\n                    <Column key={`task-stories-${task.id}`}>\n                      {storiesInRelease.map((story, storyIndex) => (\n                          <Story key={`story-${story.id}`}\n                                 {...story}\n                                 onAddAbove={() => newStoryHandler(storyIndex)}\n                                 onAddBelow={() => newStoryHandler(storyIndex + 1)} />\n                      ))}\n\n                      {!storiesInRelease.length && <button type=\"button\"\n                              onClick={() => newStoryHandler(dispatch, 0)}>\n                        + New Story\n                        </button>}\n                    </Column>\n                  )\n                })\n              )\n            })}\n          </ColumnList>\n        </Release>\n      ))}\n    </DesignSurface>\n  )\n}\n\nexport default UserStoryMap;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThemeProvider} from 'styled-components';\nimport reportWebVitals from 'reportWebVitals';\nimport GlobalStyle from 'global-style';\nimport {defaultTheme} from 'themes';\nimport UserStoryMap from 'UserStoryMap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyle />\n      <UserStoryMap />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const defaultTheme = {\n  background: '#ffffff',\n  columnWidth: '250px'\n};\n"],"sourceRoot":""}