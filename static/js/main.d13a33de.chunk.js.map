{"version":3,"sources":["reportWebVitals.js","global-style.js","components/Cards.js","components/Release.js","UserStoryMap.js","App.js","index.js","themes.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","CardContainer","styled","div","CardOutline","article","AddCardButton","button","attrs","_props","type","AddCardAboveButton","AddCardBelowButton","AddCardLeftButton","AddCardRightButton","Card","title","onAddAbove","onAddBelow","onAddLeft","onAddRight","defaultValue","autoFocus","onClick","Activity","props","Task","Story","IncrementWrapper","section","Release","name","children","DesignSurface","theme","background","ColumnList","Column","columnWidth","ActivityList","TaskList","generateId","Math","random","toString","substr","initialState","releases","id","cards","reducer","draft","action","shiftCardsOfType","index","filter","x","indexOf","forEach","card","activityIndex","push","taskIndex","activityId","storyIndex","releaseId","taskId","splice","Error","addActivityAtIndex","dispatch","addTaskAtIndex","addReleaseAtIndex","findCardsOfType","sort","a","b","UserStoryMap","map","onMapUpdated","useImmerReducer","activities","tasks","stories","useEffect","activity","activityTasks","task","length","release","releaseStories","storiesInRelease","newStoryHandler","addStoryAtIndex","story","saveState","state","App","JSON","parse","localStorage","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d13a33de.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    font-size: 18px;\n    line-height: 1.5;\n    display: flex;\n  }\n\n  body {\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n`\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: min-content auto min-content;\n  grid-template-rows: min-content auto min-content;\n  gap: 0em;\n  grid-template-areas:\n    \"top top top\"\n    \"left card right\"\n    \"bottom bottom bottom\";\n`;\n\nconst CardOutline = styled.article`\n  border: 1px solid #cccccc;\n  width: 100%;\n  grid-area: card;\n`;\n\nconst AddCardButton = styled.button.attrs(_props =>({\n  type: 'button'\n}))``;\n\nconst AddCardAboveButton = styled(AddCardButton)`\n  grid-area: top;\n`;\n\nconst AddCardBelowButton = styled(AddCardButton)`\n  grid-area: bottom;\n`;\n\nconst AddCardLeftButton = styled(AddCardButton)`\n  grid-area: left;\n`;\n\nconst AddCardRightButton = styled(AddCardButton)`\n  grid-area: right;\n`;\n\nfunction Card({title, onAddAbove, onAddBelow, onAddLeft, onAddRight}) {\n  return (\n    <CardContainer>\n      <CardOutline>\n        <input type=\"text\" defaultValue={title} autoFocus />\n      </CardOutline>\n\n      {onAddBelow && <AddCardBelowButton onClick={onAddBelow}>+</AddCardBelowButton>}\n      {onAddRight && <AddCardRightButton onClick={onAddRight}>+</AddCardRightButton>}\n      {onAddAbove && <AddCardAboveButton onClick={onAddAbove}>+</AddCardAboveButton>}\n      {onAddLeft && <AddCardLeftButton onClick={onAddLeft}>+</AddCardLeftButton>}\n    </CardContainer>\n  );\n}\n\nexport function Activity({onAddLeft, onAddRight, ...props}) {\n  return (\n    <Card {...props}\n          onAddLeft={onAddLeft}\n          onAddRight={onAddRight}\n          onAddAbove={null}\n          onAddBelow={null}>\n    </Card>\n  )\n}\n\nexport function Task({onAddLeft, onAddRight, ...props}) {\n  return (\n    <Card {...props}\n          onAddLeft={onAddLeft}\n          onAddRight={onAddRight}\n          onAddAbove={null}\n          onAddBelow={null}>\n    </Card>\n  )\n}\n\nexport function Story({onAddAbove, onAddBelow, ...props}) {\n  return (\n    <Card {...props}\n          onAddLeft={null}\n          onAddRight={null}\n          onAddAbove={onAddAbove}\n          onAddBelow={onAddBelow}>\n    </Card>\n  )\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst IncrementWrapper = styled.section`\n  border-top: 1px solid #cccccc;\n`;\n\nexport default function Release({name, children, onAddAbove, onAddBelow}) {\n  return (\n    <IncrementWrapper>\n      <header>\n        <input type=\"text\" defaultValue={name} autoFocus />\n        <button type=\"button\" onClick={onAddAbove}>Add Release Above</button>\n        <button type=\"button\" onClick={onAddBelow}>Add Release Below</button>\n      </header>\n      <div>\n        {children}\n      </div>\n    </IncrementWrapper>\n  )\n}\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport {useImmerReducer} from 'use-immer';\nimport {Activity, Task, Story} from 'components/Cards';\nimport Release from 'components/Release';\n\nconst DesignSurface = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-height: 100vh;\n  min-width: 100vw;\n  background: ${props => props.theme.background};\n`;\n\nexport const ColumnList = styled.div`\n  display: flex;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: ${props => props.theme.columnWidth};\n  max-width: ${props => props.theme.columnWidth};\n`;\n\n\nconst ActivityList = styled.div`\n  display: flex;\n`;\n\nconst TaskList = styled.div`\n  display: flex;\n`;\n\nfunction generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nconst initialState = {\n  releases: [\n    {\n      id: `release-${generateId()}`,\n      name: 'Backlog'\n    }\n  ],\n  cards: []\n}\n\nfunction reducer(draft, action) {\n  const shiftCardsOfType = (cards, type, index) => {\n    cards.filter(x => x.id.indexOf(type) === 0 && x.index >= index).forEach(card => {\n      card.index += 1;\n    });\n  }\n\n  switch (action.type) {\n    case 'add-activity':\n      shiftCardsOfType(draft.cards, 'activity', action.activityIndex);\n\n      draft.cards.push({\n        id: `activity-${generateId()}`,\n        title: '',\n        index: action.activityIndex\n      });\n      break;\n\n    case 'add-task':\n      shiftCardsOfType(draft.cards, 'task', action.taskIndex);\n\n      draft.cards.push({\n        id: `task-${generateId()}`,\n        activityId: action.activityId,\n        title: '',\n        index: action.taskIndex\n      });\n      break;\n\n    case 'add-story':\n      shiftCardsOfType(draft.cards, 'story', action.storyIndex);\n\n      draft.cards.push({\n        id: `story-${generateId()}`,\n        releaseId: action.releaseId,\n        taskId: action.taskId,\n        title: '',\n        index: action.storyIndex\n      });\n      break;\n\n    case 'add-release':\n      draft.releases.splice(action.index, 0, {\n        id: generateId(),\n        name: ''\n      })\n      break;\n\n    default:\n      throw new Error('Unknown action type')\n  }\n}\n\nfunction addActivityAtIndex(dispatch, activityIndex) {\n  dispatch({type: 'add-activity', activityIndex})\n}\n\nfunction addTaskAtIndex(dispatch, activityId, taskIndex) {\n  dispatch({type: 'add-task', activityId, taskIndex})\n}\n\nfunction addStoryAtIndex(dispatch, releaseId, taskId, storyIndex) {\n  return (storyIndex) => {\n    dispatch({type: 'add-story', releaseId, taskId, storyIndex})\n  }\n}\n\nfunction addReleaseAtIndex(dispatch, index) {\n  dispatch({type: 'add-release', index})\n}\n\nfunction findCardsOfType(cards, type) {\n  return cards.filter(x => x.id.indexOf(type) === 0).sort((a, b) => a.index - b.index);\n}\n\nfunction UserStoryMap({map, onMapUpdated}) {\n  const [{releases, cards}, dispatch] = useImmerReducer(reducer, map || initialState);\n  const activities = findCardsOfType(cards, 'activity');\n  const tasks = findCardsOfType(cards, 'task');\n  const stories = findCardsOfType(cards, 'story');\n\n  useEffect(() => {\n    onMapUpdated({\n      releases,\n      activities\n    })\n  }, [onMapUpdated, releases, activities])\n\n  return (\n    <DesignSurface>\n      <ActivityList>\n        {activities.map((activity) => {\n          const activityTasks = tasks.filter(x => x.activityId === activity.id);\n\n          return (\n            <div key={activity.id}>\n              <Column>\n                <Activity {...activity}\n                          onAddLeft={() => addActivityAtIndex(dispatch, activity.index)}\n                          onAddRight={() => addActivityAtIndex(dispatch, activity.index + 1)} />\n              </Column>\n\n              <TaskList>\n                {activityTasks.map((task) => (\n                  <Column key={task.id}>\n                    <Task {...task}\n                          onAddLeft={() => addTaskAtIndex(dispatch, activity.id, task.index)}\n                          onAddRight={() => addTaskAtIndex(dispatch, activity.id, task.index + 1)} />\n                  </Column>\n                ))}\n\n                {!activityTasks.length &&\n                  <button type=\"button\"\n                    onClick={() => addTaskAtIndex(dispatch, activity.id, 0)}>\n                    + New Task\n                  </button>}\n              </TaskList>\n            </div>\n          )\n        })}\n\n        {!activities.length &&\n          <button type=\"button\"\n            onClick={() => addActivityAtIndex(dispatch, 0)}>\n            + New Activity\n          </button>}\n      </ActivityList>\n\n      {releases.map((release, index) => {\n        const releaseStories = stories.filter(x => x.releaseId === release.id);\n\n        return (\n          <Release key={`release-${release.id}`}\n                    {...release}\n                    index={index}\n                    onAddAbove={() => addReleaseAtIndex(dispatch, index)}\n                    onAddBelow={() => addReleaseAtIndex(dispatch, index + 1)}>\n            <ColumnList>\n              {activities.map((activity) => {\n                const activityTasks = tasks.filter(x => x.activityId === activity.id);\n\n                if (!activityTasks.length) {\n                  return <Column key={`activity-empty-tasks-${activity.id}`}></Column>\n                }\n\n                return (\n                  activityTasks.length && activityTasks.map((task) => {\n                    const storiesInRelease = releaseStories.filter(x => x.releaseId === release.id && x.taskId === task.id);\n                    const newStoryHandler = addStoryAtIndex(dispatch, release.id, task.id);\n\n                    return (\n                      <Column key={`task-stories-${task.id}`}>\n                        {storiesInRelease.map((story, storyIndex) => (\n                            <Story key={story.id}\n                                  {...story}\n                                  onAddAbove={() => newStoryHandler(storyIndex)}\n                                  onAddBelow={() => newStoryHandler(storyIndex + 1)} />\n                        ))}\n\n                        {!storiesInRelease.length && <button type=\"button\"\n                                onClick={() => newStoryHandler(0)}>\n                          + New Story\n                          </button>}\n                      </Column>\n                    )\n                  })\n                )\n              })}\n            </ColumnList>\n          </Release>\n        )\n      })}\n    </DesignSurface>\n  )\n}\n\nexport default UserStoryMap;\n","import React from 'react';\nimport UserStoryMap from 'UserStoryMap';\n\nfunction loadState() {\n  const state = JSON.parse(localStorage.getItem('map'));\n  return state;\n}\n\nfunction saveState(state) {\n  // localStorage.setItem('map', JSON.stringify(state));\n}\n\nfunction App() {\n  const initialState = loadState();\n\n  return (\n    <UserStoryMap\n      map={initialState}\n      onMapUpdated={saveState}/>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThemeProvider} from 'styled-components';\nimport reportWebVitals from 'reportWebVitals';\nimport GlobalStyle from 'global-style';\nimport {defaultTheme} from 'themes';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const defaultTheme = {\n  background: '#ffffff',\n  columnWidth: '250px'\n};\n"],"sourceRoot":""}